apiVersion: v1
kind: Secret
metadata:
  # You can either hardcode the secret name or compute it dynamically.
  # Here we use a value from the values file with a fallback to a helper template.
  name: {{ include "application.fullname" . }}
  namespace: "{{ .Release.Namespace }}"
stringData:
  SECRET_KEY: {{ .Values.api.secretKey | quote }}
  HUGGING_FACE_TOKEN: {{ .Values.api.huggingFaceToken | quote }}
  REDIS_PASS: {{ .Values.api.redisPass | quote }}
  REDIS_HOST: {{ .Values.api.redisHost | quote }}
  REDIS_PORT: {{ .Values.api.redisPort | quote }}
  ROUTING_FILE: {{ .Values.api.routingFile | quote }}
  LOG_LEVEL: {{ .Values.api.logLevel | quote }}

  # DATABASE_URL is pulled from the parent’s global values
{{/*  DATABASE_URL: {{ .Values.global.postgres.database | quote }}*/}}
  DATABASE_URL: {{ include "alethichelm.postgres.dburl" $ | quote }}

  # Include the contents of firebase-credentials.json from the chart’s files folder.
  .firebase-credentials.json: |- {{ .Files.Get ".firebase-credentials.json" | nindent 4 }}
